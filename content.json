{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/blog/2022/09/02/hello-world/"},{"title":"Windows 下搭建 Spark","text":"版本选择Spark 部署模式分为本地单机（local）和集群模式，本地单机模式常用于本地开发程序与调试。集群模式又分为 Standalone 模式、Yarn 模式、Mesos 模式通过测试发现，以下版本组合报错信息最少 组件 版本 Spark 3.2.2 Hadoop 3.3.1 Scala 2.12.15 JDK 1.8 Spark 依赖库Spark 3.2.2 的依赖库版本如下： 依赖库 版本 Scala 2.12.15 Hadoop 3.3.1 安装步骤 下载安装 JDK，配置 JAVA_HOME 环境变量，将 JAVA_HOME/bin 添加至 Path 环境变量中。 下载安装 Scala，根据具体的操作系统，按照官网推荐的方式安装，无需配置 SCALA_HOME 环境变量。 下载安装 Hadoop，配置 HADOOP_HOME 环境变量，将 HADOOP_HOME/bin 添加至 Path 环境变量中。若在 Windows 上搭建，则还需要根据具体的 Hadoop 版本下载对应的 winutils.exe 和 hadoop.dll 文件，以避免以下报错信息：1Exception in thread “main” java.lang.UnsatisfiedLinkError: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z 下载安装 Spark，配置 SPARK_HOME 环境变量，将 SPARK_HOME/bin 添加至 Path 环境变量中。进入 Spark 目录下的 conf 子目录下，根据需要修改 log4j.properties 等配置文件。log4j.properties 常见的配置如下：12345# 在终端输出 WARN 级别的日志，避免输出过多日志，影响查看log4j.rootCategory=WARN, console# 避免 ERROR ShutdownHookManager: Exception while deleting Spark temp dir 报错log4j.logger.org.apache.spark.util.ShutdownHookManager=OFFlog4j.logger.org.apache.spark.SparkEnv=ERROR","link":"/blog/2022/09/05/Windows%E4%B8%8B%E6%90%AD%E5%BB%BASpark/"},{"title":"Hexo + Icarus + GitHub Pages 搭建个人博客","text":"先决条件需要先安装以下程序： Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本) Git Node.js 版本限制强烈建议永远安装最新版本的 Hexo，以及推荐的 Node.js 版本。 Hexo 版本 最低兼容的 Node.js 版本 6.0+ 12.13.0 5.0+ 10.13.0 4.1 - 4.2 8.10 4.0 8.6 3.3 - 3.9 6.9 3.2 - 3.3 0.12 3.0 - 3.1 0.10 or iojs 0.0.1 - 2.8 0.10 安装 Hexo使用 npm 全局安装 Hexo。 1npm install -g hexo-cli 安装 icarus 指定路径初始化博客目录，并切换至该路径下，以blog路径为例12hexo init blogcd blog 使用 npm 安装 Hexo。1npm install hexo-theme-icarus 配置 Hexo 主题1hexo config theme icarus 创建 GitHub 仓库 创建 GitHub 仓库，并开启 Environments，配置 url 配置 ssh，确保可以 ssh 远程访问 GitHub，可以使用以下命令测试连接是否成功：1ssh -T git@github.com 如果出行以下信息，则说明连接成功：1Hi imaginefish! You've successfully authenticated, but GitHub does not provide shell access. 修改配置Hexo 配置Hexo 的配置文件在 blog 目录下，名为 _config.yml 修改语言为中文简体1language: zh-CN 修改时区1timezone: 'Asia/Shanghai' 修改博客网址，如果不配置会出现文件路径引用错误问题，导致 js、css、图片无法加载1url: https://imaginefish.github.io/blog 修改 hexo 部署方式，推送至 Github 仓库的 gh-pages 分支，实现博客部署1234deploy: type: git repository: git@github.com:imaginefish/blog.git branch: gh-pages Icarus 配置Icarus 的配置文件在 blog 目录下，名为 _config.icarus.yml 该主题导航栏无法跟随 Hexo 语言本地化，需要手动修改配置文件123456menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 关于: /about 设置博主邮箱链接123Email: icon: fas fa-envelope url: mailto:imaginefishes@outlook.com 修改 sidebar 配置，使 toc 随文章下拉滚动123sidebar: left: sticky: true 用户访问量统计1busuanzi: true 布局配置文件布局配置文件遵循着与主题配置文件相同的格式和定义。 _config.post.yml 中的配置对所有文章生效，而 _config.page.yml 中的配置对所有自定义页面生效。 这两个文件将覆盖主题配置文件中的配置。例如，可以在 _config.post.yml 中把所有文章变为两栏布局：12345678910111213141516widgets: - position: left type: toc index: true collapsed: true depth: 3 - type: categories position: left - position: left type: recent_posts - type: tags position: left 同时所有其他页面仍保持三栏布局：12345678910widgets: - type: recent_posts position: left - type: categories position: right - type: tags position: right 以下给出个人的完整 _config.icarus.yml 配置：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143version: 5.1.0variant: defaultlogo: /img/logo.svghead: favicon: /img/favicon.svg manifest: name: short_name: start_url: theme_color: background_color: display: standalone icons: - src: '' sizes: '' type: structured_data: title: 梦鱼乡 description: 个人博客 url: https://github.com/imaginefish/blog author: 梦鱼 publisher: publisher_logo: image: meta: - '' rss: /atom.xmlnavbar: menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 关于: /about links: GitHub: icon: fab fa-github url: https://github.com/imaginefish/blogfooter: links: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution 4.0 International: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Download on GitHub: icon: fab fa-github url: https://github.com/ppoffice/hexo-theme-icarusarticle: highlight: theme: atom-one-light clipboard: true fold: unfolded readtime: true update_time: true licenses: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Noncommercial: icon: fab fa-creative-commons-nc url: https://creativecommons.org/licenses/by-nc/4.0/search: type: insight index_pages: truesidebar: left: sticky: true right: sticky: falsewidgets: - position: left type: profile author: 梦鱼 author_title: 大数据开发工程师 location: 中国.上海 avatar: /img/avatar.jpg avatar_rounded: true gravatar: follow_link: https://github.com/imaginefishes social_links: Github: icon: fab fa-github url: https://github.com/imaginefishes Email: icon: fas fa-envelope url: mailto:imaginefishes@outlook.com RSS: icon: fas fa-rss url: /atom.xml - position: left type: toc index: true collapsed: true depth: 3 - position: left type: links links: Hexo: https://hexo.io Icarus: https://ppoffice.github.io/hexo-theme-icarus - position: left type: categories - position: right type: recent_posts - position: right type: archives - position: right type: tags order_by: name amount: show_count: trueplugins: animejs: true back_to_top: true busuanzi: true cookie_consent: type: info theme: edgeless static: false position: bottom-left policyLink: https://www.cookiesandyou.com/ gallery: true katex: true mathjax: true outdated_browser: false progressbar: trueproviders: cdn: jsdelivr fontcdn: google iconcdn: fontawesome 其他问题 文章图片插入问题若要插入本地图片，在博客根目录下找到 source 文件夹，在其下创建 img 子目录，将图片放置于此，通过 /img/xxx.jpg 路径引入。","link":"/blog/2022/09/02/hexo-icarus-github-pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/blog/tags/Hexo/"},{"name":"Icarus","slug":"Icarus","link":"/blog/tags/Icarus/"},{"name":"Hadoop","slug":"Hadoop","link":"/blog/tags/Hadoop/"},{"name":"Spark","slug":"Spark","link":"/blog/tags/Spark/"}],"categories":[{"name":"个人博客","slug":"个人博客","link":"/blog/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"name":"大数据","slug":"大数据","link":"/blog/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"pages":[{"title":"关于我","text":"","link":"/blog/about/index.html"}]}